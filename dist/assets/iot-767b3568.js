import{j as n}from"./jseApiHelper-9f2fb730.js";const l="iotScene";let f,i,r;async function y(){n.loaded(),f=await n.getAppConfig(),r=f["Server Url"]||"https://lightswitch.free.beeceptor.com";const e=await b();e&&(await n.initScene({sceneID:l}),f.Lights.forEach(async o=>{const t=o.ID,c=e[t],s=o.Place,a=[1,1,1],p=g({isOn:c}),m=await n.getSOCenter({key:s.key});i={sceneID:l,id:t,position:m,scale:a,gltf:p,onEvent:({id:d,event:w})=>{w==="mouseUp"&&u({id:d,isOn:c})}},n.mesh(i)}))}y();async function b(){const e=await h(`${r}/api/devices`,"get");if(e)return Object.fromEntries(e.map(o=>[o.id,o.isOn]))}async function u({id:e,isOn:o}){const t=await h(`${r}/api/devices/${e}/action/turn${o?"Off":"On"}`,"post");if(!t)return;o=t.isOn;const c=g({isOn:o});i={sceneID:l,id:e,gltf:c,onEvent:({id:s,event:a})=>{a==="mouseUp"&&u({id:s,isOn:o})}},n.mesh(i)}async function h(e,o){try{const t=await fetch(e,{method:o});if(t!=null&&t.ok)return t.json();(t==null?void 0:t.status)===429&&r.includes("free.beeceptor.com")?console.error("fetch error. You've reached the daily free quota."):console.error("fetch failed",t==null?void 0:t.statusText)}catch(t){console.error("fetch error",t)}}function g({isOn:e}){return`https://storage.googleapis.com/resonai-public/com.resonai.iot/models/bulb-${e?"on":"off"}.glb`}
