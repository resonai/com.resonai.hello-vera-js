import{j as o}from"./jseApiHelper-dd9c2ac4.js";const l="iotScene";let f,c,r;async function y(){o.loaded(),f=await o.getAppConfig(),r=f["Server Url"]||"https://lightswitch.free.beeceptor.com";const t=await b();t&&(await o.initScene({sceneID:l}),f.Lights.forEach(async n=>{const e=n.ID,i=t[e],s=n.Place,a=[1,1,1],g=d({isOn:i}),p=await o.getSOCenter({key:s.key});c={sceneID:l,id:e,position:p,scale:a,gltf:g,onEvent:({id:m,event:w})=>{w=="mouseUp"&&u({id:m,isOn:i})}},o.mesh(c)}))}y();async function b(){const t=await h(`${r}/api/devices`,"get");if(t)return Object.fromEntries(t.map(n=>[n.id,n.isOn]))}async function u({id:t,isOn:n}){const e=await h(`${r}/api/devices/${t}/action/turn${n?"Off":"On"}`,"post");if(!e)return;n=e.isOn;const i=d({isOn:n});c={sceneID:l,id:t,gltf:i,onEvent:({id:s,event:a})=>{a==="mouseUp"&&u({id:s,isOn:n})}},o.mesh(c)}async function h(t,n){try{const e=await fetch(t,{method:n});if(e!=null&&e.ok)return e.json();(e==null?void 0:e.status)===429&&r.includes("free.beeceptor.com")?console.error("fetch error. You've reached the daily free quota."):console.error("fetch failed",e==null?void 0:e.statusText)}catch(e){console.error("fetch error",e)}}function d({isOn:t}){return`https://storage.googleapis.com/resonai-public/com.resonai.iot/models/bulb-${t?"on":"off"}.glb`}
